{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/common/webclient/auth/index.ts"],"names":[],"mappings":";;;;;;;;;;AACA,kCAAwC;AAIxC,uBAA4D,OAAwB,EAAE,UAAiC;IACtH,MAAM,CAAC,mBAAoB,SAAQ,oBAAa,CAAC,OAAO,CAAC;QAAlD;;YACC,UAAK,GAAG,IAAI,UAAU,EAAE,CAAC;QAmBjC,CAAC;QAjBa,SAAS,CAAC,GAAW,EAAE,IAAS,EAAE,KAAc;;gBAC5D,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;gBAEnC,IAAI,OAAwB,CAAC;gBAE7B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC;oBAClB,OAAO,GAAG,EAAE,eAAe,EAAE,UAAW,KAAM,EAAE,EAAE,CAAC;gBAEpD,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAgB,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;gBAElE,IAAI,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;gBAExC,EAAE,CAAC,CAAC,YAAY,IAAI,UAAU,CAAC;oBAC9B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAE1B,MAAM,CAAC,IAAI,CAAC;YACb,CAAC;SAAA;KACD,CAAA;AACF,CAAC;AAtBD,sCAsBC","sourcesContent":["import { IRequestHeaders, RequestFunction, IRequestOptions, IResponse, IAuthWebClient } from '../contracts';\nimport { JsonWebClient } from '../json';\nimport { AuthToken } from './token';\nimport { IWrappedToken } from '../contracts';\n\nexport function AuthWebClient<TAuthToken extends AuthToken>(request: RequestFunction, TokenClass: { new(): TAuthToken }) {\n\treturn class AuthWebClient extends JsonWebClient(request) implements IAuthWebClient<TAuthToken> {\n\t\tpublic token = new TokenClass();\n\n\t\tpublic async authorize(url: string, body: any, token?: string): Promise<IWrappedToken> {\n\t\t\ttoken = token || this.token.access;\n\n\t\t\tlet headers: IRequestHeaders;\n\n\t\t\tif (token !== null)\n\t\t\t\theaders = { 'Authorization': `Bearer ${ token }` };\n\n\t\t\tlet { data } = await this.post<IWrappedToken>(url, body, headers);\n\n\t\t\tlet { access_token, expires_in } = data;\n\n\t\t\tif (access_token && expires_in)\n\t\t\t\tthis.token.refresh(data);\n\n\t\t\treturn data;\n\t\t}\n\t}\n}"]}