{"version":3,"file":"cors.js","sourceRoot":"","sources":["../../../src/server/middleware/cors.ts"],"names":[],"mappings":";;;AAGA,MAAa,IAAI;IACT,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAmB;QAC1D,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC;QAC9B,IAAI,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;QAEzB,IAAI,MAAM;YACT,GAAG,CAAC,GAAG,CAAC,6BAA6B,EAAW,MAAM,CAAC,CAAC;QAEzD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,KAAK,EAAE;YAC7C,MAAM,oBAAoB,GAAG;gBAC5B,kCAAkC,EAAE,MAAM;gBAC1C,8BAA8B,EAAE,GAAG;aAC5B,CAAC;YAET,IAAI,OAAO,CAAC,gCAAgC,CAAC;gBAC5C,oBAAoB,CAAC,8BAA8B,CAAC,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;YAElG,GAAG,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;SAC9B;QAED,IAAI,MAAM,KAAK,SAAS,EAAE;YACzB,GAAG,CAAC,GAAG,EAAE,CAAC;SACV;aACI;YACJ,IAAI,EAAE,CAAC;SACP;IACF,CAAC;CACD;AA3BD,oBA2BC","sourcesContent":["import { ExpressMiddlewareInterface } from 'routing-controllers';\nimport { Request, Response, NextFunction } from 'express';\n\nexport class CORS implements ExpressMiddlewareInterface {\n\tpublic use(req: Request, res: Response, next?: NextFunction): any {\n\t\tlet { headers, method } = req;\n\t\tlet { origin } = headers;\n\n\t\tif (origin)\n\t\t\tres.set('Access-Control-Allow-Origin', <string> origin);\n\n\t\tif (method === 'OPTIONS' || method === 'GET') {\n\t\t\tconst accessControlHeaders = {\n\t\t\t\t'Access-Control-Allow-Credentials': 'true',\n\t\t\t\t'Access-Control-Allow-Methods': '*'\n\t\t\t} as any;\n\n\t\t\tif (headers['access-control-request-headers'])\n\t\t\t\taccessControlHeaders['Access-Control-Allow-Headers'] = headers['access-control-request-headers'];\n\n\t\t\tres.set(accessControlHeaders);\n\t\t}\n\n\t\tif (method === 'OPTIONS') {\n\t\t\tres.end();\n\t\t}\n\t\telse {\n\t\t\tnext();\n\t\t}\n\t}\n}"]}