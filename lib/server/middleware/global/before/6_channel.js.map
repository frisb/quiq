{"version":3,"file":"6_channel.js","sourceRoot":"","sources":["../../../../../src/server/middleware/global/before/6_channel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,+BAA+B;AAC/B,6DAAwF;AAExF,yCAAoC;AACpC,sDAAkD;AAClD,qCAAkC;AAClC,6CAA+C;AAE/C,iDAAkD;AAElD,MAAM,MAAM,GAAG,IAAI,iBAAO,CAAC,oBAAoB,CAAC,CAAC;AAIjD,IAAa,OAAO,GAApB;IACc,GAAG,CAAC,GAAa,EAAE,GAAa,EAAE,IAAkB;;YAChE,MAAM,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAE1B,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC;YACzC,IAAI,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC;YAEhC,aAAa,GAAY,aAAa,CAAC;YAEvC,IAAI,EAAE,GAAG,wBAAU,EAAE,CAAC;YACtB,IAAI,IAAI,GAAG,mBAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;YAEtC,IAAI,IAAI,KAAK,KAAK;gBACjB,IAAI,GAAG,WAAW,CAAC;YAEpB,IAAI,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC;YAElD,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC;YACZ,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,aAAa,IAAI,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC;gBACzD,GAAG,CAAC,mBAAmB,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAEnD,GAAG,CAAC,SAAS,GAAG,EAAE,CAAC;YAEnB,MAAM,CAAC,KAAK,CAAC,GAAI,GAAI,MAAO,MAAO,IAAK,GAAI,EAAE,EAAE;gBAC/C,OAAO;gBACP,IAAI;aACJ,CAAC,CAAC;YAEH,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;YAEpB,GAAG,CAAC,IAAI,GAAG,UAAU,OAAa;gBACjC,IAAI,QAAQ,GAAG,OAAO,CAAC;gBAEvB,IAAI,QAAQ,IAAI,GAAG,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,kBAAkB;oBACnE,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAEjC,MAAM,CAAC,KAAK,CAAC,GAAI,GAAI,MAAO,GAAG,CAAC,UAAW,EAAE,EAAE,QAAQ,CAAC,CAAC;gBACzD,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;YACnC,CAAC,CAAC;YAEF,IAAI,EAAE,CAAC;QACR,CAAC;KAAA;CACD,CAAA;AA5CY,OAAO;IAFnB,gCAAU,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;IAC3C,+BAAS,CAAC,2BAAc,CAAC;GACb,OAAO,CA4CnB;AA5CY,0BAAO;AA8CpB,mBAAyB,GAAa,EAAE,GAAa;;QACpD,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO;YACnC,QAAQ,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE;gBACnC,KAAK,kBAAkB;oBACtB,kBAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;oBAC1B,MAAM;gBAEP,KAAK,mCAAmC;oBACvC,wBAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;oBAChC,MAAM;gBAEP;oBACC,OAAO,EAAE,CAAC;oBACV,MAAM;aACP;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;CAAA","sourcesContent":["import * as chalk from 'chalk';\nimport { Middleware, ExpressMiddlewareInterface, UseBefore } from 'routing-controllers';\nimport { Response, NextFunction } from 'express';\nimport { process } from 'ipaddr.js';\nimport { generateID } from '../../../idgenerator';\nimport { Writeln } from 'writeln';\nimport { json, urlencoded } from 'body-parser';\nimport { IRequest } from '../../../contracts';\nimport { JsonBodyParser } from '../../bodyparser';\n\nconst logger = new Writeln('Channel Middleware');\n\n@Middleware({ type: 'before', priority: 6 })\n@UseBefore(JsonBodyParser)\nexport class Channel implements ExpressMiddlewareInterface {\n\tpublic async use(req: IRequest, res: Response, next: NextFunction): Promise<void> {\n\t\tawait parseBody(req, res);\n\n\t\tlet { method, url, headers, body } = req;\n\t\tlet { authorization } = headers;\n\n\t\tauthorization = <string> authorization;\n\n\t\tlet ID = generateID();\n\t\tlet ipv4 = process(req.ip).toString(); // x-forwarded-for ?\n\n\t\tif (ipv4 === '::1')\n\t\t\tipv4 = '127.0.0.1';\n\n\t\tlet key = chalk.default.gray.dim(`${ipv4}-${ID}`);\n\n\t\treq.ID = ID;\n\t\treq.ipv4 = ipv4;\n\n\t\tif (authorization && authorization.indexOf('Bearer') === 0)\n\t\t\treq.authorizationBearer = authorization.substr(7);\n\n\t\treq.intercept = {};\n\n\t\tlogger.debug(`${ key } > ${ method } ${ url }`, {\n\t\t\theaders,\n\t\t\tbody\n\t\t});\n\n\t\tlet send = res.send;\n\n\t\tres.send = function (payload?: any): Response {\n\t\t\tlet metadata = payload;\n\n\t\t\tif (metadata && res.getHeader('content-type') === 'application/json')\n\t\t\t\tmetadata = JSON.parse(metadata);\n\n\t\t\tlogger.debug(`${ key } < ${ res.statusCode }`, metadata);\n\t\t\treturn send.apply(res, arguments);\n\t\t};\n\n\t\tnext();\n\t}\n}\n\nasync function parseBody(req: IRequest, res: Response): Promise<{}> {\n\treturn new Promise(function (resolve) {\n\t\tswitch (req.header('content-type')) {\n\t\t\tcase 'application/json':\n\t\t\t\tjson()(req, res, resolve);\n\t\t\t\tbreak;\n\n\t\t\tcase 'application/x-www-form-urlencoded':\n\t\t\t\turlencoded()(req, res, resolve);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tresolve();\n\t\t\t\tbreak;\n\t\t}\n\t});\n}\n"]}