{"version":3,"file":"3_secure.js","sourceRoot":"","sources":["../../../../../src/server/middleware/global/before/3_secure.ts"],"names":[],"mappings":";;;;;;;;AAAA,6DAA6E;AAI7E,IAAa,MAAM,GAAnB,MAAa,MAAM;IACX,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAmB;QAC1D,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;QAE5C,IAAI,IAAI,KAAK,GAAG,IAAI,QAAQ,KAAK,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE;YAC9E,GAAG,CAAC,QAAQ,CAAC,WAAY,QAAS,GAAI,GAAI,EAAE,CAAC,CAAC;SAC9C;aACI;YACJ,IAAI,EAAE,CAAC;SACP;IACF,CAAC;CACD,CAAA;AAXY,MAAM;IADlB,gCAAU,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;GAC/B,MAAM,CAWlB;AAXY,wBAAM","sourcesContent":["import { Middleware, ExpressMiddlewareInterface } from 'routing-controllers';\nimport { Request, Response, NextFunction } from 'express';\n\n@Middleware({ type: 'before', priority: 3 })\nexport class Secure implements ExpressMiddlewareInterface {\n\tpublic use(req: Request, res: Response, next?: NextFunction): any {\n\t\tlet { path, protocol, hostname, url } = req;\n\n\t\tif (path === '/' && protocol !== 'https' && hostname.indexOf('localhost') < 0) {\n\t\t\tres.redirect(`https://${ hostname }${ url }`);\n\t\t}\n\t\telse {\n\t\t\tnext();\n\t\t}\n\t}\n}\n"]}