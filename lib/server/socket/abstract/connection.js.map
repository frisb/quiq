{"version":3,"file":"connection.js","sourceRoot":"","sources":["../../../../src/server/socket/abstract/connection.ts"],"names":[],"mappings":";;;AAAA,mCAAsC;AAGtC,MAAsB,kBACtB,SAAQ,qBAAY;IADpB;;QAKW,YAAO,GAAa,IAAI,CAAC;IAkBpC,CAAC;IAhBO,IAAI,CAAC,OAAiB;QAC1B,IAAI,CAAC,OAAO,GAAc,OAAO,CAAC;QAElC,IAAI,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAEM,KAAK;QACX,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;IACjB,CAAC;CAOD;AAvBD,gDAuBC","sourcesContent":["import { EventEmitter } from 'events';\nimport { IConnection, ISession } from '../contracts';\n\nexport abstract class AbstractConnection<TSession extends ISession>\nextends EventEmitter\nimplements IConnection {\n\t[key: string]: any;\n\n\tprotected session: TSession = null;\n\n\tpublic init(session: ISession) {\n    this.session = <TSession> session;\n\n    this.onInit();\n\t}\n\n\tpublic close() {\n\t\tthis.removeAllListeners();\n\t\tthis.onClosed();\n\t}\n\n\tpublic abstract onInit(): void;\n\n\tpublic abstract onClosed(): void;\n\n\tpublic abstract get isInitialized(): boolean;\n}\n"]}