{"version":3,"file":"tokenwrapper.js","sourceRoot":"","sources":["../../../src/server/interceptors/tokenwrapper.ts"],"names":[],"mappings":";;AAEA,4CAAyC;AACzC,qCAAkC;AAGlC,MAAM,MAAM,GAAG,IAAI,iBAAO,CAAC,2BAA2B,CAAC,CAAC;AAExD,sBAA6B,OAAwB,EAAE,GAAG,UAAoB;IAC7E,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,OAAO,CAAC,CAAC;IAEzC;QACQ,SAAS,CAAC,MAAc,EAAE,OAAY;YAC5C,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAc,MAAM,CAAC,OAAO,CAAC;YAC3D,IAAI,aAAa,GAAG,GAAI,QAAS,IAAK,MAAM,CAAC,SAAU,EAAE,CAAC;YAC1D,IAAI,OAAO,GAAkB,EAAE,CAAC;YAEhC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,EAAE,GAAG,UAAU,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC1D,IAAI,IAAI,GAAW,UAAU,CAAC,CAAC,CAAC,CAAC;gBAEjC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBACjB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACrB,CAAC;YAED,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;YAE/C,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QAC9D,CAAC;KACD;IAED,MAAM,CAAC,YAAY,CAAC;AACrB,CAAC;AAvBD,oCAuBC","sourcesContent":["import { InterceptorInterface, Action } from 'routing-controllers';\nimport { IRequest, ISigningOptions } from '../contracts';\nimport { Tokenizer } from '../tokenizer';\nimport { Writeln } from 'writeln';\nimport { IWrappedToken } from '../../shared';\n\nconst logger = new Writeln('Token Wrapper Interceptor');\n\nexport function TokenWrapper(signing: ISigningOptions, ...fieldNames: string[]): any {\n\tconst tokenizer = new Tokenizer(signing);\n\n\tclass TokenWrapper implements InterceptorInterface {\n\t\tpublic intercept(action: Action, payload: any): IWrappedToken {\n\t\t\tlet { ipv4, hostname, socket } = <IRequest> action.request;\n\t\t\tlet channelOrigin = `${ hostname }:${ socket.localPort }`;\n\t\t\tlet include: Array<string> = [];\n\n\t\t\tfor (let i = 0, { length } = fieldNames; i < length; i++) {\n\t\t\t\tlet name: string = fieldNames[i];\n\n\t\t\t\tif (payload[name])\n\t\t\t\t\tinclude.push(name);\n\t\t\t}\n\n\t\t\tlogger.debug('Wrapping', { payload, include });\n\n\t\t\treturn tokenizer.wrap(ipv4, channelOrigin, payload, include);\n\t\t}\n\t}\n\n\treturn TokenWrapper;\n}\n"]}