{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/shared/webclient/auth/index.ts"],"names":[],"mappings":";;AACA,kCAAwC;AAIxC,SAAgB,aAAa,CAAgC,OAAwB,EAAE,UAAiC;IACvH,OAAO,MAAM,aAAc,SAAQ,oBAAa,CAAC,OAAO,CAAC;QAAlD;;YACC,UAAK,GAAG,IAAI,UAAU,EAAE,CAAC;QAmBjC,CAAC;QAjBO,KAAK,CAAC,SAAS,CAAC,GAAW,EAAE,IAAS,EAAE,KAAc;YAC5D,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAEnC,IAAI,OAAwB,CAAC;YAE7B,IAAI,KAAK,KAAK,IAAI;gBACjB,OAAO,GAAG,EAAE,eAAe,EAAE,UAAW,KAAM,EAAE,EAAE,CAAC;YAEpD,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAgB,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YAElE,IAAI,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;YAExC,IAAI,YAAY,IAAI,UAAU;gBAC7B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAE1B,OAAO,IAAI,CAAC;QACb,CAAC;KACD,CAAA;AACF,CAAC;AAtBD,sCAsBC","sourcesContent":["import { IRequestHeaders, RequestFunction, IRequestOptions, IResponse, IAuthWebClient, IWrappedToken, IAuthToken } from '../contracts/index';\nimport { JsonWebClient } from '../json';\n\nexport { IAuthWebClient }\n\nexport function AuthWebClient<TAuthToken extends IAuthToken>(request: RequestFunction, TokenClass: { new(): TAuthToken }): { new(userAgent?: string): IAuthWebClient<TAuthToken> } {\n\treturn class AuthWebClient extends JsonWebClient(request) implements IAuthWebClient<TAuthToken> {\n\t\tpublic token = new TokenClass();\n\n\t\tpublic async authorize(url: string, body: any, token?: string): Promise<IWrappedToken> {\n\t\t\ttoken = token || this.token.access;\n\n\t\t\tlet headers: IRequestHeaders;\n\n\t\t\tif (token !== null)\n\t\t\t\theaders = { 'Authorization': `Bearer ${ token }` };\n\n\t\t\tlet { data } = await this.post<IWrappedToken>(url, body, headers);\n\n\t\t\tlet { access_token, expires_in } = data;\n\n\t\t\tif (access_token && expires_in)\n\t\t\t\tthis.token.refresh(data);\n\n\t\t\treturn data;\n\t\t}\n\t}\n}"]}